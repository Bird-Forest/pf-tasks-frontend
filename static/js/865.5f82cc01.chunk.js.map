{"version":3,"file":"static/js/865.5f82cc01.chunk.js","mappings":"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","sources":["components/AuthForm/ErrorAuth.jsx","components/AuthForm/Form.styled.js","components/Task/MyTask.jsx","components/Task/Task.styled.js","components/Task/TaskListColor.jsx","../node_modules/nanoid/index.browser.js","components/Task/TaskListEmpty.jsx","redux/filter/constans.js"],"sourcesContent":["import React from 'react';\nimport { SiNotepadplusplus } from 'react-icons/si';\nimport { Link } from 'react-router-dom';\nimport { WrapAuthError } from './Form.styled';\n\nexport default function ErrorAuth({ error }) {\n  return (\n    <WrapAuthError>\n      {error === 'Request failed with status code 401' && (\n        <>\n          <h3 className=\"error-text\">Email or password is wrong</h3>\n          <div className=\"wrap-error\">\n            <SiNotepadplusplus className=\"icon-lizard\" />\n            <Link to=\"/\" className=\"error-link\">\n              Forgot your password ?\n            </Link>\n          </div>\n        </>\n      )}\n      {error === 'Request failed with status code 409' && (\n        <>\n          <h3 className=\"error-text\">This user already exists</h3>\n          <div className=\"wrap-error\">\n            <SiNotepadplusplus className=\"icon-lizard\" />\n            <Link to=\"/login\" className=\"error-link\">\n              Please Sign In\n            </Link>\n          </div>\n        </>\n      )}\n    </WrapAuthError>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MyStyled = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: #ffffff;\n  border-radius: 24px;\n  border: 1px solid #eeeeee;\n  box-shadow: 0px 4px 8px 0px RGBA(158, 158, 158, 0.34);\n  .my-form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 16px;\n    padding: 40px 20px;\n  }\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 280px;\n    height: 48px;\n    color: #424242;\n    font-size: 16px;\n    font-weight: 400;\n    background-color: #f5f5f5;\n    box-shadow: 0px 4px 8px 0px RGBA(158, 158, 158, 0.34);\n    border-radius: 10px;\n    border: 1px solid #f5f5f5;\n    outline: #f5f5f5;\n    transition: all 0.3s;\n    margin: 40px 0 0 0;\n    padding: 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: #e0e0e0;\n    }\n  }\n`;\nexport const InputWrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  .my-input {\n    width: 260px;\n    height: 24px;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #424242;\n    border-radius: 10px;\n    border: 2px solid #f5f5f5;\n    outline: none;\n    padding: 8px;\n  }\n  .my-input.error {\n    border: 2px solid #ff1744;\n  }\n  .label-input {\n    font-size: 12px;\n    text-align: center;\n    color: #616161;\n    background-color: #ffffff;\n    padding: 0;\n    margin: 0;\n  }\n  /* .label-input.error {\n    color: #ff1744;\n  } */\n  .my-password {\n    width: 260px;\n    height: 24px;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #424242;\n    border-radius: 10px;\n    border: 2px solid #f5f5f5;\n    outline: none;\n    padding: 8px;\n  }\n  .my-password.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const ShowPasswordBtn = styled.button`\n  position: absolute;\n  top: 40px;\n  right: 8px;\n  transform: translateY(-50%);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  .icon-eye {\n    width: 24px;\n    height: 24px;\n    fill: #616161;\n  }\n`;\nexport const ErrorMessage = styled.div`\n  color: #ff1744;\n  font-size: 12px;\n`;\n\n// *********  PopUp Error **************\n// export const Backdrop = styled.div`\n//   top: 0;\n//   left: 0;\n//   z-index: 3;\n//   position: fixed;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   width: 100vw;\n//   height: 100vh;\n//   color: #ffffff;\n//   backdrop-filter: blur(2px);\n//   background: rgba(255, 255, 255, 0.5);\n// `;\nexport const WrapAuthError = styled.div`\n  /* bottom: 28px; */\n  /* left: 39%; */\n  /* right: 50%; */\n  /* position: absolute; */\n  /* position: relative; */\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: flex-start;\n  align-items: center;\n  width: 260px;\n  height: 112px;\n  border-radius: 16px;\n  /* background-color: #e0e0e0; */\n  background-color: #f5f5f5;\n  box-shadow: 0px 4px 8px 0px RGBA(135, 135, 135, 0.34);\n  border: 1px solid #e0e0e0;\n  padding: 24px 12px;\n  margin: 0 0 40px 0;\n  .wrap-error {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 12px;\n    width: 100%;\n    /* height: 60px; */\n    padding: 0;\n  }\n  .error-text {\n    font-size: 18px;\n    font-weight: 500;\n    color: #424242;\n    padding: 0;\n  }\n  .error-link {\n    font-size: 20px;\n    font-weight: 700;\n    color: #424242;\n  }\n  .icon-lizard {\n    width: 100px;\n    height: 100px;\n    fill: #424242;\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  BtnDelete,\n  BtnSetting,\n  BtnStatus,\n  SettingTask,\n  TaskBackGr,\n  Text,\n  WrapTask,\n  Wrapper,\n} from './Task.styled';\nimport { BsFillTrash3Fill } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { BsEmojiWink } from 'react-icons/bs';\nimport { FaCogs } from 'react-icons/fa';\nimport { BsHandThumbsUp } from 'react-icons/bs';\nimport { changeTaskColor, deleteTask } from 'redux/tasks/servise';\nimport { filters } from '../../redux/filter/constans';\n\nexport default function MyTask({ task }) {\n  const dispatch = useDispatch();\n  const [isMoving, setIsMoving] = useState(false);\n\n  const handleSettingClick = () => {\n    setIsMoving(!isMoving);\n  };\n\n  const handleDeleteTask = evt => {\n    const taskId = evt.currentTarget.name;\n    dispatch(deleteTask(taskId));\n  };\n\n  const handleChangeColor = evt => {\n    const newTask = {\n      taskId: evt.currentTarget.name,\n      newColor: evt.currentTarget.value,\n    };\n    dispatch(changeTaskColor(newTask));\n  };\n\n  return (\n    <WrapTask id={task._id}>\n      <Wrapper>\n        <TaskBackGr style={{ backgroundColor: task.color }}>\n          <Text>{task.title}</Text>\n          <SettingTask\n            style={{\n              transform: isMoving ? 'translate(0, 0)' : 'translate(-124%, 0)',\n            }}\n          >\n            <BtnStatus\n              type=\"button\"\n              name={task._id}\n              // color=\"#64b5f6\"\n              // value=\"#64b5f6\"\n              value={filters.blue}\n              onClick={handleChangeColor}\n            >\n              <BsHandThumbsUp className=\"icon-color\" />\n            </BtnStatus>\n            <BtnStatus\n              type=\"button\"\n              name={task._id}\n              // color=\"#ff5252\"\n              // value=\"#ff5252\"\n              value={filters.red}\n              onClick={handleChangeColor}\n            >\n              <BsEmojiWink className=\"icon-color\" />\n            </BtnStatus>\n            <BtnStatus\n              type=\"button\"\n              name={task._id}\n              // color=\"#ffee58\"\n              // value=\"#ffee58\"\n              value={filters.yellow}\n              onClick={handleChangeColor}\n            >\n              <BsEmojiWink className=\"icon-color\" />\n            </BtnStatus>\n            <BtnStatus\n              type=\"button\"\n              name={task._id}\n              // color=\"#00e676\"\n              // value=\"#00e676\"\n              value={filters.green}\n              onClick={handleChangeColor}\n            >\n              <BsEmojiWink className=\"icon-color\" />\n            </BtnStatus>\n            <BtnDelete name={task._id} onClick={handleDeleteTask}>\n              <BsFillTrash3Fill className=\"icon-delete\" />\n            </BtnDelete>\n          </SettingTask>\n          <BtnSetting onClick={handleSettingClick}>\n            <FaCogs className=\"icon-setting\" />\n          </BtnSetting>\n        </TaskBackGr>\n      </Wrapper>\n    </WrapTask>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n  width: 100%;\n  padding: 0;\n`;\n\nexport const WrapTask = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 2px;\n  width: 100%;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  background-color: #9e9e9e;\n  border-radius: 8px;\n  border: 3px solid RGBA(117, 117, 117, 0.6);\n  padding: 0 2px;\n  margin: 0;\n`;\nexport const TaskBackGr = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  width: 100%;\n  background-color: ${props => props.value};\n  border-radius: 6px;\n  border: 1px solid #bdbdbd;\n  padding: 0;\n  margin: 0;\n`;\nexport const Text = styled.p`\n  display: flex;\n  font-size: 16px;\n  font-weight: 400;\n  color: #424242;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin: 0;\n  padding: 0 0 0 36px;\n`;\nexport const BtnSetting = styled.button`\n  position: absolute;\n  /* overflow: hidden; */\n  display: flex;\n  width: 32px;\n  height: 32px;\n  justify-content: center;\n  align-items: center;\n  background-color: #bdbdbd;\n  border: 1px solid #bdbdbd;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  cursor: pointer;\n  .icon-setting {\n    width: 24px;\n    height: 24px;\n    fill: #ffffff;\n  }\n  .icon-setting:hover,\n  .icon-setting:focus {\n    fill: #616161;\n  }\n`;\nexport const SettingTask = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n  background-color: #bdbdbd;\n  flex-basis: 250px;\n  height: 32px;\n  border-bottom-right-radius: 4px;\n  border-top-right-radius: 4px;\n  padding: 0 4px;\n  margin: 0;\n  transform: translate(0, 0);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  left: 34px;\n`;\nexport const BtnStatus = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  border: 1px solid #616161;\n  border-radius: 50%;\n  background-color: ${props => props.value};\n  cursor: pointer;\n  .icon-color {\n    width: 24px;\n    height: 24px;\n    fill: #616161;\n  }\n`;\nexport const BtnDelete = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ffffff;\n  border-radius: 50%;\n  border: 1px solid #616161;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  cursor: pointer;\n  .icon-delete {\n    width: 20px;\n    height: 20px;\n    fill: #616161;\n  }\n`;\nexport const WrapEmpty = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background-color: #e0e0e0;\n  padding: 0;\n  margin: 20px 0;\n  .empty-text {\n    font-size: 20px;\n    font-weight: 500;\n    color: #424242;\n  }\n  .icon-lizard {\n    width: 160px;\n    height: 160px;\n    fill: #424242;\n  }\n`;\n","import Loading from 'components/Loader/Loader';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectErrorTasks,\n  selectFilter,\n  selectIsLoading,\n  selectTasks,\n} from 'redux/selectors';\nimport TaskListError from '../AuthForm/ErrorAuth';\nimport { WrapList } from './Task.styled';\nimport MyTask from './MyTask';\nimport TaskListEmpty from './TaskListEmpty';\nimport { nanoid } from 'nanoid';\n\nexport default function TaskListColor() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectErrorTasks);\n  const tasks = useSelector(selectTasks);\n  const filter = useSelector(selectFilter);\n  const priorities = tasks.filter(task => task.color === filter);\n  const showArr = Array.isArray(priorities) && priorities.length !== 0;\n  return (\n    <>\n      {isLoading && <Loading />}\n      {error && <TaskListError />}\n      <WrapList>\n        {showArr ? (\n          priorities.map(task => <MyTask task={task} key={nanoid()} />)\n        ) : (\n          <TaskListEmpty />\n        )}\n      </WrapList>\n    </>\n  );\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React from 'react';\nimport { WrapEmpty } from './Task.styled';\nimport { SiNotepadplusplus } from 'react-icons/si';\n\nexport default function TaskListEmpty() {\n  return (\n    <WrapEmpty>\n      <h4 className=\"empty-text\">It's empty here</h4>\n      <SiNotepadplusplus className=\"icon-lizard\" />\n    </WrapEmpty>\n  );\n}\n","export const filters = Object.freeze({\n  white: '#ffffff',\n  blue: '#64b5f6',\n  red: '#ff5252',\n  yellow: '#ffee58',\n  green: '#00e676',\n});\n"],"names":["ErrorAuth","error","className","to","MyStyled","styled","InputWrap","ShowPasswordBtn","ErrorMessage","WrapAuthError","MyTask","task","dispatch","useDispatch","useState","isMoving","setIsMoving","handleChangeColor","evt","newTask","taskId","currentTarget","name","newColor","value","changeTaskColor","id","_id","style","backgroundColor","color","title","transform","type","filters","onClick","deleteTask","WrapList","WrapTask","Wrapper","TaskBackGr","props","Text","BtnSetting","SettingTask","BtnStatus","BtnDelete","WrapEmpty","TaskListColor","isLoading","useSelector","selectIsLoading","selectErrorTasks","tasks","selectTasks","filter","selectFilter","priorities","showArr","Array","isArray","length","map","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","TaskListEmpty","Object","freeze","white","blue","red","yellow","green"],"sourceRoot":""}