{"version":3,"file":"static/js/986.3044356b.chunk.js","mappings":"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","sources":["components/AuthForm/ErrorAuth.jsx","components/AuthForm/Form.styled.js","components/AuthForm/InputPassword.jsx","components/AuthForm/InputText.jsx","components/AuthForm/FormSignIn.jsx","pages/LoginPage.jsx","pages/Page.styled.js"],"sourcesContent":["import React from 'react';\nimport { SiNotepadplusplus } from 'react-icons/si';\nimport { Link } from 'react-router-dom';\nimport { WrapAuthError } from './Form.styled';\n\nexport default function ErrorAuth({ error }) {\n  return (\n    <WrapAuthError>\n      {error === 'Request failed with status code 401' && (\n        <>\n          <h3 className=\"error-text\">Email or password is wrong</h3>\n          <div className=\"wrap-error\">\n            <SiNotepadplusplus className=\"icon-lizard\" />\n            <Link to=\"/\" className=\"error-link\">\n              Forgot your password ?\n            </Link>\n          </div>\n        </>\n      )}\n      {error === 'Request failed with status code 409' && (\n        <>\n          <h3 className=\"error-text\">This user already exists</h3>\n          <div className=\"wrap-error\">\n            <SiNotepadplusplus className=\"icon-lizard\" />\n            <Link to=\"/login\" className=\"error-link\">\n              Please Sign In\n            </Link>\n          </div>\n        </>\n      )}\n    </WrapAuthError>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MyStyled = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: #ffffff;\n  border-radius: 24px;\n  border: 1px solid #eeeeee;\n  box-shadow: 0px 4px 8px 0px RGBA(158, 158, 158, 0.34);\n  .my-form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 16px;\n    padding: 40px 20px;\n  }\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 280px;\n    height: 48px;\n    color: #424242;\n    font-size: 16px;\n    font-weight: 400;\n    background-color: #f5f5f5;\n    box-shadow: 0px 4px 8px 0px RGBA(158, 158, 158, 0.34);\n    border-radius: 10px;\n    border: 1px solid #f5f5f5;\n    outline: #f5f5f5;\n    transition: all 0.3s;\n    margin: 40px 0 0 0;\n    padding: 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: #e0e0e0;\n    }\n  }\n`;\nexport const InputWrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  .my-input {\n    width: 260px;\n    height: 24px;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #424242;\n    border-radius: 10px;\n    border: 2px solid #f5f5f5;\n    outline: none;\n    padding: 8px;\n  }\n  .my-input.error {\n    border: 2px solid #ff1744;\n  }\n  .label-input {\n    font-size: 12px;\n    text-align: center;\n    color: #616161;\n    background-color: #ffffff;\n    padding: 0;\n    margin: 0;\n  }\n  /* .label-input.error {\n    color: #ff1744;\n  } */\n  .my-password {\n    width: 260px;\n    height: 24px;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #424242;\n    border-radius: 10px;\n    border: 2px solid #f5f5f5;\n    outline: none;\n    padding: 8px;\n  }\n  .my-password.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const ShowPasswordBtn = styled.button`\n  position: absolute;\n  top: 40px;\n  right: 8px;\n  transform: translateY(-50%);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  .icon-eye {\n    width: 24px;\n    height: 24px;\n    fill: #616161;\n  }\n`;\nexport const ErrorMessage = styled.div`\n  color: #ff1744;\n  font-size: 12px;\n`;\n\n// *********  PopUp Error **************\n// export const Backdrop = styled.div`\n//   top: 0;\n//   left: 0;\n//   z-index: 3;\n//   position: fixed;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   width: 100vw;\n//   height: 100vh;\n//   color: #ffffff;\n//   backdrop-filter: blur(2px);\n//   background: rgba(255, 255, 255, 0.5);\n// `;\nexport const WrapAuthError = styled.div`\n  /* bottom: 28px; */\n  /* left: 39%; */\n  /* right: 50%; */\n  /* position: absolute; */\n  /* position: relative; */\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: flex-start;\n  align-items: center;\n  width: 260px;\n  height: 112px;\n  border-radius: 16px;\n  /* background-color: #e0e0e0; */\n  background-color: #f5f5f5;\n  box-shadow: 0px 4px 8px 0px RGBA(135, 135, 135, 0.34);\n  border: 1px solid #e0e0e0;\n  padding: 24px 12px;\n  margin: 0 0 40px 0;\n  .wrap-error {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 12px;\n    width: 100%;\n    /* height: 60px; */\n    padding: 0;\n  }\n  .error-text {\n    font-size: 18px;\n    font-weight: 500;\n    color: #424242;\n    padding: 0;\n  }\n  .error-link {\n    font-size: 20px;\n    font-weight: 700;\n    color: #424242;\n  }\n  .icon-lizard {\n    width: 100px;\n    height: 100px;\n    fill: #424242;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useField } from 'formik';\nimport { ErrorMessage, InputWrap, ShowPasswordBtn } from './Form.styled';\nimport { PiEyeLight, PiEyeSlash } from 'react-icons/pi';\n\nexport default function InputPassword({ label, ...props }) {\n  const [field, meta] = useField(props);\n  const [showPassword, setShowPassword] = useState(false);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <InputWrap>\n      <label\n        htmlFor={props.id || props.name}\n        className={`label-input ${errorClass}`}\n      >\n        {label}\n      </label>\n      <input\n        className={`my-password ${errorClass}`}\n        {...field}\n        {...props}\n        type={showPassword ? 'text' : 'password'}\n      />\n      <ShowPasswordBtn\n        type=\"button\"\n        onClick={() => setShowPassword(!showPassword)}\n      >\n        {showPassword ? (\n          <PiEyeLight className=\"icon-eye\" />\n        ) : (\n          <PiEyeSlash className=\"icon-eye\" />\n        )}\n      </ShowPasswordBtn>\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </InputWrap>\n  );\n}\n","import React from 'react';\nimport { useField } from 'formik';\nimport { ErrorMessage, InputWrap } from './Form.styled';\n\nexport default function InputText({ label, ...props }) {\n  const [field, meta] = useField(props);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <InputWrap>\n      <label\n        htmlFor={props.id || props.name}\n        className={`label-input ${errorClass}`}\n      >\n        {label}\n      </label>\n      <input className={`my-input ${errorClass}`} {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </InputWrap>\n  );\n}\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport InputText from './InputText';\nimport InputPassword from './InputPassword';\nimport { MyStyled } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginThunk } from 'redux/user/operations';\nimport { selectErrorUser } from 'redux/selectors';\nimport ErrorAuth from './ErrorAuth';\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email').required('This field is required'),\n  password: Yup.string().required('This field is required'),\n});\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport default function FormSignIn() {\n  const dispatch = useDispatch();\n  const errorAuth = useSelector(selectErrorUser);\n  console.log(errorAuth);\n  return (\n    <MyStyled>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          console.log(values);\n          setSubmitting(true);\n          dispatch(loginThunk(values));\n          resetForm();\n        }}\n      >\n        {props => (\n          <Form className=\"my-form\" autoComplete=\"off\">\n            <InputText label=\"Enter your email\" name=\"email\" type=\"email\" />\n            <InputPassword\n              label=\"Enter your password\"\n              name=\"password\"\n              type=\"password\"\n            />\n            <button type=\"submit\" className=\"button\">\n              {props.isSubmitting ? 'loading...' : 'Submit'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n      {errorAuth !== null && <ErrorAuth error={errorAuth} />}\n    </MyStyled>\n  );\n}\n","import React from 'react';\nimport { TitleSignPage, WrapSignPage } from './Page.styled';\nimport { WrapOutlet } from '../components/App.styled';\nimport FormSignIn from '../components/AuthForm/FormSignIn';\n\nexport default function LoginPage() {\n  return (\n    <WrapOutlet>\n      <WrapSignPage>\n        <TitleSignPage>Log In</TitleSignPage>\n        <FormSignIn />\n      </WrapSignPage>\n    </WrapOutlet>\n  );\n}\n","import styled from 'styled-components';\nimport picture from '../img/icon_219488.png';\n\nexport const WrapHome = styled.div`\n  top: 100px;\n  display: flex;\n  width: 900px;\n  height: 100%;\n`;\n\nexport const WrapTasksPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n  width: 90%;\n  background-color: #e0e0e0;\n  /* height: 100%; */\n  margin: 0;\n  padding: 8px;\n  border-radius: 8px;\n  @media screen and (min-width: 767px) {\n    width: 760px;\n  }\n`;\n\nexport const WrapSignPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n  margin: 0;\n  padding: 16px 0 0 0;\n  @media screen and (min-width: 767px) {\n    width: 760px;\n  }\n`;\nexport const TitleSignPage = styled.h3`\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.5;\n  text-align: center;\n  color: #424242;\n`;\nexport const WrapNotFound = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin: 20px 0 0 0;\n  padding: 0;\n  .title {\n    font-size: clamp(1rem, 0.818rem + 0.91vw, 1.5rem);\n    font-weight: 700;\n    color: #616161;\n    margin: 0;\n    padding: 0;\n  }\n  .img {\n    width: 160px;\n    height: 160px;\n    background-image: url(${picture});\n    background-repeat: no-repeat;\n    background-size: cover;\n    margin: 0;\n    padding: 0;\n  }\n`;\n"],"names":["ErrorAuth","error","className","to","MyStyled","styled","InputWrap","ShowPasswordBtn","ErrorMessage","WrapAuthError","InputPassword","label","props","useField","field","meta","useState","showPassword","setShowPassword","errorClass","touched","htmlFor","id","name","type","onClick","InputText","validationSchema","Yup","email","required","password","initialValues","FormSignIn","dispatch","useDispatch","errorAuth","useSelector","selectErrorUser","console","log","onSubmit","values","setSubmitting","resetForm","loginThunk","autoComplete","isSubmitting","LoginPage","WrapTasksPage","WrapSignPage","TitleSignPage","WrapNotFound","picture"],"sourceRoot":""}