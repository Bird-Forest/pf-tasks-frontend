{"version":3,"file":"static/js/404.8794c68d.chunk.js","mappings":"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","sources":["pages/Page.styled.js","components/Task/Task.styled.js","components/Task/MyTask.jsx","components/Task/TaskList.jsx","components/UserMenu/UserMenu.styled.js","components/Filter/Filter.styled.js","components/Filter/FilterTasks.jsx","pages/TasksPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapTasksPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  /* gap: 8px; */\n  width: 100%;\n  /* height: 100%; */\n  margin: 0;\n  padding: 0;\n  /* @media screen and (min-width: 380px) {\n    min-width: 360px;\n  }\n  @media screen and (min-width: 440px) {\n    min-width: 420px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 480px;\n  } */\n`;\nexport const WrapSignPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n  margin: 0;\n  padding: 28px 0 0 0;\n`;\nexport const TitleSignPage = styled.h3`\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.5;\n  text-align: center;\n  color: #424242;\n`;\n// export const WrapLoginPage = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: flex-start;\n//   align-items: center;\n//   gap: 20px;\n//   width: 100%;\n//   height: 100vh;\n//   margin: 0 auto;\n//   padding: 72px 0 0 0;\n// `;\n// export const TitleLoginPage = styled.h2`\n//   font-size: 24px;\n//   color: #1769aa;\n//   padding: 0;\n//   margin: 0;\n// `;\nexport const WrapHome = styled.div`\n  top: 100px;\n  display: flex;\n  width: 900px;\n  height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const WrapList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n  padding: 0;\n  margin: 80px auto;\n  @media screen and (min-width: 320px) {\n    min-width: 320px;\n  }\n  @media screen and (min-width: 440px) {\n    /* min-width: 420px; */\n  }\n  @media screen and (min-width: 500px) {\n    /* width: 480px; */\n  }\n`;\n\nexport const WrapTask = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* min-width: 300px; */\n  /* width: 100%; */\n  height: 44px;\n  /* padding: 0;\n  margin: 0 auto; */\n`;\n\nexport const DateTask = styled.p`\n  display: flex;\n  width: 70px;\n  height: 50px;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: aqua;\n  color: black;\n  padding: 0;\n  margin: 0;\n`;\nexport const StatusTask = styled.button`\n  width: 50px;\n  height: 50px;\n`;\n\nexport const TextTask = styled.div`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  /* width: 100%; */\n  background-color: ${props => props.color};\n  border-radius: 25px;\n  border: 1px solid #2196f3;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const Text = styled.h4`\n  display: inline-block;\n  width: 248px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #2c387e;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin: 0;\n  padding: 0 0 0 16px;\n  @media screen and (min-width: 380px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 440px) {\n    width: 360px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 404px;\n  }\n`;\n\nexport const BtnSetting = styled.button`\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n  background-color: #2196f3;\n  border: 1px solid #2196f3;\n  outline: #2196f3;\n  width: 60px;\n  height: 44px;\n  border-top-right-radius: 25px;\n  border-bottom-right-radius: 25px;\n  cursor: pointer;\n  .icon-setting {\n    width: 28px;\n    height: 28px;\n    fill: white;\n  }\n  .icon-setting:hover,\n  .icon-setting:focus {\n    fill: #1769aa;\n  }\n`;\n\nexport const SettingTask = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n  background-color: #2196f3;\n  color: white;\n  width: 250px;\n  height: 44px;\n  border-bottom-left-radius: 25px;\n  border-top-left-radius: 25px;\n  border: 1px solid #2196f3;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  transform: translate(0, 0);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  right: 0;\n`;\n\nexport const BtnStatus = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  border: 2px solid #2196f3;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n  .icon-color {\n    width: 24px;\n    height: 24px;\n    fill: #2196f3;\n  }\n  .icon-color:hover,\n  .icon-color:focus {\n    width: 24px;\n    height: 24px;\n    fill: white;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  border-radius: 50%;\n  border: 2px solid #2196f3;\n  width: 40px;\n  height: 40px;\n  padding: 0;\n  cursor: pointer;\n  .icon-delete {\n    width: 20px;\n    height: 20px;\n    fill: #2196f3;\n  }\n  .icon-delete:hover,\n  .icon-delete:focus {\n    fill: #1769aa;\n  }\n  @media screen and (min-width: 600px) {\n    width: 40px;\n    height: 40px;\n    .icon-delete {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  BtnDelete,\n  BtnSetting,\n  BtnStatus,\n  DateTask,\n  SettingTask,\n  StatusTask,\n  Text,\n  TextTask,\n  WrapTask,\n} from './Task.styled';\nimport { BsFillTrash3Fill } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, changeTaskColor } from 'redux/tasks/tasksSlice';\nimport { BsEmojiWink } from 'react-icons/bs';\nimport { FaCogs } from 'react-icons/fa';\n\nexport default function MyTask({ task }) {\n  const dispatch = useDispatch();\n  const [isMoving, setIsMoving] = useState(false);\n\n  const handleSettingClick = () => {\n    setIsMoving(!isMoving);\n  };\n\n  return (\n    <WrapTask>\n      <DateTask>{task.date}</DateTask>\n      <StatusTask>{task.completed}</StatusTask>\n      <TextTask style={{ backgroundColor: task.color }}>\n        <Text>{task.title}</Text>\n        <SettingTask\n          style={{\n            transform: isMoving ? 'translate(0, 0)' : 'translate(80%, 0)',\n          }}\n        >\n          <BtnStatus\n            color=\"#ff5252\"\n            onClick={() =>\n              dispatch(changeTaskColor({ color: '#ff5252', id: task.id }))\n            }\n          >\n            <BsEmojiWink className=\"icon-color\" />\n          </BtnStatus>\n          <BtnStatus\n            color=\"#ffee58\"\n            onClick={() =>\n              dispatch(changeTaskColor({ color: '#ffee58', id: task.id }))\n            }\n          >\n            <BsEmojiWink className=\"icon-color\" />\n          </BtnStatus>\n          <BtnStatus\n            color=\"#00e676\"\n            onClick={() =>\n              dispatch(changeTaskColor({ color: '#00e676', id: task.id }))\n            }\n          >\n            <BsEmojiWink className=\"icon-color\" />\n          </BtnStatus>\n          <BtnDelete onClick={() => dispatch(deleteTask(task.id))}>\n            <BsFillTrash3Fill className=\"icon-delete\" />\n          </BtnDelete>\n        </SettingTask>\n        <BtnSetting onClick={handleSettingClick}>\n          <FaCogs className=\"icon-setting\" />\n        </BtnSetting>\n      </TextTask>\n    </WrapTask>\n  );\n}\n","import React from 'react';\nimport { WrapList } from './Task.styled';\nimport {\n  selectIsLoading,\n  selectError,\n  selectVisibleTasks,\n} from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport MyTask from './MyTask';\n// import Task from 'components/Task/Task';\n\nexport default function TaskList() {\n  // const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const newTasks = useSelector(selectVisibleTasks);\n\n  console.log(newTasks);\n\n  // useEffect(() => {\n  //   dispatch(fetchTasks());\n  // }, [dispatch]);\n\n  const showArr = Array.isArray(newTasks) && newTasks.length !== 0;\n  return (\n    <>\n      {isLoading && <p>Loading tasks...</p>}\n      {error && <p>{error}</p>}\n      <WrapList>\n        {showArr && newTasks.map(task => <MyTask task={task} key={nanoid()} />)}\n      </WrapList>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapUserMenu = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  /* width: 230px; */\n  gap: 10px;\n  margin: 0;\n  @media screen and (min-width: 380px) {\n    margin: 0 0 0 60px;\n  }\n  @media screen and (min-width: 440px) {\n    margin: 0 0 0 40px;\n  }\n  @media screen and (min-width: 500px) {\n    margin: 0 0 0 80px;\n  }\n`;\n\nexport const BtnAll = styled.button`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #2c387e;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: white;\n  border: 1px solid white;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  /* @media screen and (min-width: 440px) {\n    width: 40px;\n    height: 40px;\n  } */\n`;\nexport const BtnRed = styled.button`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #2c387e;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #ff5252;\n  border: 1px solid #ff5252;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  /* @media screen and (min-width: 440px) {\n    width: 40px;\n    height: 40px;\n  } */\n`;\nexport const BtnYellow = styled.button`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #2c387e;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #ffee58;\n  border: 1px solid #ffee58;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  /* @media screen and (min-width: 440px) {\n    width: 40px;\n    height: 40px;\n  } */\n`;\nexport const BtnGreen = styled.button`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #2c387e;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #00e676;\n  border: 1px solid #00e676;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  /* @media screen and (min-width: 440px) {\n    width: 40px;\n    height: 40px;\n  } */\n`;\n\nexport const BtnLogOut = styled.button`\n  display: block;\n  background-color: #1769aa;\n  border: #1769aa;\n  width: 32px;\n  height: 32px;\n  margin: 0;\n  padding: 0;\n  .icon-out {\n    background-color: #1769aa;\n    width: 32px;\n    height: 32px;\n    fill: white;\n  }\n  /* @media screen and (min-width: 440px) {\n    .icon-out {\n      width: 36px;\n      height: 36px;\n    }\n  } */\n`;\n","import styled from 'styled-components';\n\nexport const TitleTab = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 2px;\n  min-width: 320px;\n  /* height: 52px; */\n  background-color: #e0e0e0;\n  padding: 2px;\n  margin: 0;\n`;\nexport const CellDate = styled.div`\n  display: flex;\n  flex-basis: 60px;\n  justify-content: center;\n  align-items: center;\n  /* width: 60px; */\n  height: 40px;\n  background-color: #9e9e9e;\n  border-radius: 8px;\n  border: 3px solid RGBA(117, 117, 117, 0.6);\n  margin: 0;\n  .date {\n    width: 54px;\n    height: 34px;\n    border-radius: 4px;\n    background-color: #f5f5f5;\n    outline: none;\n    border: none;\n    padding: 0;\n  }\n`;\nexport const CellStatus = styled.div`\n  display: flex;\n  flex-basis: 40px;\n  justify-content: center;\n  align-items: center;\n  /* width: 40px; */\n  height: 40px;\n  background-color: #9e9e9e;\n  border-radius: 8px;\n  border: 3px solid RGBA(117, 117, 117, 0.6);\n  margin: 0;\n  .status {\n    width: 34px;\n    height: 34px;\n    border-radius: 4px;\n    background-color: #f5f5f5;\n    outline: none;\n    border: none;\n    padding: 0;\n  }\n`;\nexport const CellPriority = styled.div`\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  align-items: center;\n  /* width: 40px; */\n  height: 40px;\n  background-color: #9e9e9e;\n  border-radius: 8px;\n  border: 3px solid RGBA(117, 117, 117, 0.6);\n  margin: 0;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectStatusFilter,\n  selectTaskCount,\n  selectTasks,\n} from 'redux/selectors';\nimport { setStatusFilter } from 'redux/filter/filtersSlice';\nimport { statusFilters } from 'redux/filter/constans';\nimport {\n  BtnAll,\n  BtnGreen,\n  BtnRed,\n  BtnYellow,\n} from 'components/UserMenu/UserMenu.styled';\nimport { CellDate, CellPriority, CellStatus, TitleTab } from './Filter.styled';\n\nexport default function FilterTasks() {\n  const dispatch = useDispatch();\n  const tasks = useSelector(selectTasks);\n  const count = useSelector(selectTaskCount);\n  const filter = useSelector(selectStatusFilter);\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  return (\n    <TitleTab>\n      <CellDate>\n        <button className=\"date\">Date</button>\n      </CellDate>\n      <CellStatus>\n        <button className=\"status\">Sta</button>\n      </CellStatus>\n      <CellPriority>\n        <BtnAll\n          selected={filter === statusFilters.all}\n          onClick={() => handleFilterChange(statusFilters.all)}\n        >\n          {tasks.length}\n        </BtnAll>\n        <BtnRed\n          selected={filter === statusFilters.red}\n          onClick={() => handleFilterChange(statusFilters.red)}\n        >\n          {count.red}\n        </BtnRed>\n        <BtnYellow\n          selected={filter === statusFilters.yellow}\n          onClick={() => handleFilterChange(statusFilters.yellow)}\n        >\n          {count.yellow}\n        </BtnYellow>\n        <BtnGreen\n          selected={filter === statusFilters.green}\n          onClick={() => handleFilterChange(statusFilters.green)}\n        >\n          {count.green}\n        </BtnGreen>\n      </CellPriority>\n    </TitleTab>\n  );\n}\n","// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { selectIsLoading } from 'redux/selectors';\n// import { fetchTasks } from 'redux/operations';\n// import TaskForm from 'components/TaskForm/TaskForm';\nimport { WrapTasksPage } from './Page.styled';\nimport TaskList from 'components/Task/TaskList';\nimport FilterTasks from 'components/Filter/FilterTasks';\nimport { WrapOutlet } from 'components/App.styled';\n\nexport default function TasksPage() {\n  // const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n\n  // useEffect(() => {\n  //   dispatch(fetchTasks());\n  // }, [dispatch]);\n\n  return (\n    <WrapOutlet>\n      <WrapTasksPage>\n        {/* <div>{isLoading && 'Request in progress...'}</div> */}\n        {/* <TaskForm /> */}\n        <FilterTasks />\n        <TaskList />\n      </WrapTasksPage>\n    </WrapOutlet>\n  );\n}\n"],"names":["WrapTasksPage","styled","WrapSignPage","TitleSignPage","WrapList","WrapTask","DateTask","StatusTask","TextTask","props","color","Text","BtnSetting","SettingTask","BtnStatus","BtnDelete","MyTask","task","dispatch","useDispatch","useState","isMoving","setIsMoving","date","completed","style","backgroundColor","title","transform","onClick","changeTaskColor","id","className","deleteTask","TaskList","isLoading","useSelector","selectIsLoading","error","selectError","newTasks","selectVisibleTasks","console","log","showArr","Array","isArray","length","map","nanoid","BtnAll","BtnRed","BtnYellow","BtnGreen","TitleTab","CellDate","CellStatus","CellPriority","FilterTasks","tasks","selectTasks","count","selectTaskCount","filter","selectStatusFilter","handleFilterChange","setStatusFilter","selected","statusFilters","red","yellow","green","TasksPage"],"sourceRoot":""}