{"version":3,"file":"static/js/706.e228c949.chunk.js","mappings":"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","sources":["pages/Page.styled.js","components/Task/Task.styled.js","components/Task/MyTask.jsx","components/Task/TaskListEmpty.jsx","components/Task/TaskList.jsx","components/Filter/Filter.styled.js","components/Filter/FilterTasks.jsx","pages/TasksPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapTasksPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n  width: 90%;\n  background-color: #e0e0e0;\n  /* height: 100%; */\n  margin: 0;\n  padding: 8px;\n  border-radius: 8px;\n  @media screen and (min-width: 767px) {\n    width: 760px;\n  }\n  /* @media screen and (min-width: 380px) {\n    min-width: 360px;\n  }\n  @media screen and (min-width: 440px) {\n    min-width: 420px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 480px;\n  } */\n`;\nexport const WrapSignPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n  margin: 0;\n  padding: 28px 0 0 0;\n  @media screen and (min-width: 767px) {\n    width: 760px;\n  }\n`;\nexport const TitleSignPage = styled.h3`\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.5;\n  text-align: center;\n  color: #424242;\n`;\n// export const WrapLoginPage = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: flex-start;\n//   align-items: center;\n//   gap: 20px;\n//   width: 100%;\n//   height: 100vh;\n//   margin: 0 auto;\n//   padding: 72px 0 0 0;\n// `;\n// export const TitleLoginPage = styled.h2`\n//   font-size: 24px;\n//   color: #1769aa;\n//   padding: 0;\n//   margin: 0;\n// `;\nexport const WrapHome = styled.div`\n  top: 100px;\n  display: flex;\n  width: 900px;\n  height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const WrapList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n  width: 100%;\n  padding: 0;\n  /* margin: 80px auto; */\n  /* @media screen and (min-width: 320px) {\n    min-width: 320px;\n  }\n  @media screen and (min-width: 440px) {\n    min-width: 420px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 480px;\n  } */\n`;\n\nexport const WrapTask = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 2px;\n  width: 100%;\n  /* min-width: 300px; */\n  /* width: 100%; */\n  /* height: 36px;\n  background-color: #9e9e9e;\n  border-radius: 8px;\n  border: 3px solid RGBA(117, 117, 117, 0.6);\n  margin: 0;\n  padding: 0; */\n  /* padding: 0;\n  margin: 0 auto; */\n`;\n\n// export const DateTask = styled.div`\n//   display: flex;\n//   flex-basis: 54px;\n//   height: 36px;\n//   justify-content: center;\n//   align-items: center;\n//   background-color: #9e9e9e;\n//   border-radius: 8px;\n//   border: 3px solid RGBA(117, 117, 117, 0.6);\n//   margin: 0;\n//   .date {\n//     width: 50px;\n//     height: 32px;\n//     border-radius: 4px;\n//     background-color: #f5f5f5;\n//     padding: 0;\n//     margin: 0;\n//   }\n// `;\n// export const StatusTask = styled.div`\n//   display: flex;\n//   flex-basis: 36px;\n//   justify-content: center;\n//   align-items: center;\n//   height: 36px;\n//   background-color: #9e9e9e;\n//   border-radius: 8px;\n//   border: 3px solid RGBA(117, 117, 117, 0.6);\n//   margin: 0;\n//   .status {\n//     width: 32px;\n//     height: 32px;\n//     border-radius: 4px;\n//     background-color: #f5f5f5;\n//     outline: none;\n//     border: none;\n//     padding: 0;\n//     margin: 0;\n//   }\n// `;\nexport const Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  background-color: #9e9e9e;\n  border-radius: 8px;\n  border: 3px solid RGBA(117, 117, 117, 0.6);\n  padding: 0 2px;\n  margin: 0;\n`;\nexport const TaskBackGr = styled.div`\n  /* position: relative;\n  overflow: hidden; */\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  width: 100%;\n  background-color: ${props => props.color};\n  border-radius: 6px;\n  border: 1px solid #bdbdbd;\n  padding: 0;\n  margin: 0;\n`;\nexport const Text = styled.p`\n  display: flex;\n  /* flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center; */\n  /* flex-grow: 1; */\n  /* width: 150px; */\n  font-size: 16px;\n  font-weight: 400;\n  color: #424242;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin: 0;\n  padding: 0 0 0 36px;\n  /* @media screen and (min-width: 380px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 440px) {\n    width: 360px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 404px;\n  } */\n`;\n\nexport const BtnSetting = styled.button`\n  position: absolute;\n  /* overflow: hidden; */\n  display: flex;\n  /* flex-grow: 0.2; */\n  width: 32px;\n  height: 32px;\n  justify-content: center;\n  align-items: center;\n  background-color: #bdbdbd;\n  border: 1px solid #bdbdbd;\n  outline: none;\n  /* width: 40px; */\n  padding: 0;\n  margin: 0;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  cursor: pointer;\n  .icon-setting {\n    width: 24px;\n    height: 24px;\n    fill: #ffffff;\n  }\n  .icon-setting:hover,\n  .icon-setting:focus {\n    fill: #616161;\n  }\n`;\n\nexport const SettingTask = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n  background-color: #bdbdbd;\n  /* color: #ffffff; */\n  flex-basis: 250px;\n  height: 32px;\n  border-bottom-right-radius: 4px;\n  border-top-right-radius: 4px;\n  /* border: 1px solid #bdbdbd; */\n  padding: 0 4px;\n  margin: 0;\n  transform: translate(0, 0);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  /* right: 140px; */\n  left: 34px;\n`;\n\nexport const BtnStatus = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  border: 1px solid #616161;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n  cursor: pointer;\n  .icon-color {\n    width: 24px;\n    height: 24px;\n    fill: #616161;\n  }\n  /* .icon-color:hover,\n  .icon-color:focus {\n    width: 24px;\n    height: 24px;\n    fill: #ffffff;\n  } */\n`;\n\nexport const BtnDelete = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ffffff;\n  border-radius: 50%;\n  border: 1px solid #616161;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  cursor: pointer;\n  .icon-delete {\n    width: 20px;\n    height: 20px;\n    fill: #616161;\n  }\n  /* .icon-delete:hover,\n  .icon-delete:focus {\n    fill: #1769aa;\n  } */\n  /* @media screen and (min-width: 600px) {\n    width: 40px;\n    height: 40px;\n    .icon-delete {\n      width: 24px;\n      height: 24px;\n    }\n  } */\n`;\nexport const WrapEmpty = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n  /* background-color: red; */\n  padding: 0;\n  margin: 20px 0;\n  .empty-text {\n    font-size: 20px;\n    font-weight: 500;\n    color: #424242;\n  }\n  .icon-lizard {\n    width: 160px;\n    height: 160px;\n    fill: #424242;\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  BtnDelete,\n  BtnSetting,\n  BtnStatus,\n  SettingTask,\n  TaskBackGr,\n  Text,\n  WrapTask,\n  Wrapper,\n} from './Task.styled';\nimport { BsFillTrash3Fill } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\n// import { deleteTask, changeTaskColor } from '../../redux/tasks/tasksSlice';\nimport { BsEmojiWink } from 'react-icons/bs';\nimport { FaCogs } from 'react-icons/fa';\n// import { BsHandThumbsUpFill } from 'react-icons/bs';\nimport { BsHandThumbsUp } from 'react-icons/bs';\nimport { changeTaskColor, deleteTask } from 'redux/tasks/servise';\n// import { selectStatusFilter } from 'redux/selectors';\n// <BsHandThumbsUpFill />\n\nexport default function MyTask({ task }) {\n  const dispatch = useDispatch();\n  const [isMoving, setIsMoving] = useState(false);\n  // const filter = useSelector(selectStatusFilter);\n  // const completed = filter.white\n\n  const handleSettingClick = () => {\n    setIsMoving(!isMoving);\n  };\n\n  // const taskId = task._id;\n\n  const deleteOneTask = evt => {\n    const taskId = evt.currentTarget.name;\n    console.log(taskId);\n    dispatch(deleteTask(taskId));\n  };\n\n  // const taskId = task._id;\n\n  return (\n    <WrapTask id={task._id}>\n      <Wrapper>\n        <TaskBackGr style={{ backgroundColor: task.color }}>\n          {/* <Text>Successfully completed <BsHandThumbsUpFill /></Text> */}\n          <Text>{task.title}</Text>\n          <SettingTask\n            style={{\n              transform: isMoving ? 'translate(0, 0)' : 'translate(-124%, 0)',\n            }}\n          >\n            <BtnStatus\n              color=\"#64b5f6\"\n              onClick={() =>\n                dispatch(\n                  changeTaskColor({\n                    color: '#64b5f6',\n                    _id: task._id,\n                  })\n                )\n              }\n            >\n              <BsHandThumbsUp className=\"icon-color\" />\n            </BtnStatus>\n            <BtnStatus\n              color=\"#ff5252\"\n              onClick={() =>\n                dispatch(changeTaskColor({ color: '#ff5252', _id: task._id }))\n              }\n            >\n              <BsEmojiWink className=\"icon-color\" />\n            </BtnStatus>\n            <BtnStatus\n              color=\"#ffee58\"\n              onClick={() =>\n                dispatch(changeTaskColor({ color: '#ffee58', _id: task._id }))\n              }\n            >\n              <BsEmojiWink className=\"icon-color\" />\n            </BtnStatus>\n            <BtnStatus\n              color=\"#00e676\"\n              onClick={() =>\n                dispatch(changeTaskColor({ color: '#00e676', _id: task._id }))\n              }\n            >\n              <BsEmojiWink className=\"icon-color\" />\n            </BtnStatus>\n            <BtnDelete name={task._id} onClick={deleteOneTask}>\n              <BsFillTrash3Fill className=\"icon-delete\" />\n            </BtnDelete>\n          </SettingTask>\n          <BtnSetting onClick={handleSettingClick}>\n            <FaCogs className=\"icon-setting\" />\n          </BtnSetting>\n        </TaskBackGr>\n      </Wrapper>\n    </WrapTask>\n  );\n}\n","import React from 'react';\nimport { WrapEmpty } from './Task.styled';\nimport { SiNotepadplusplus } from 'react-icons/si';\n\nexport default function TaskListEmpty() {\n  return (\n    <WrapEmpty>\n      <h4 className=\"empty-text\">It's empty here</h4>\n      <SiNotepadplusplus className=\"icon-lizard\" />\n    </WrapEmpty>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { WrapList } from './Task.styled';\nimport {\n  selectIsLoading,\n  selectErrorTasks,\n  selectTasks,\n} from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport MyTask from './MyTask';\nimport TaskListEmpty from './TaskListEmpty';\nimport { fetchTasks } from 'redux/tasks/servise';\n\nexport default function TaskList() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectErrorTasks);\n  // const newTasks = useSelector(selectVisibleTasks);\n  const tasks = useSelector(selectTasks);\n\n  console.log(tasks);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  const showArr = Array.isArray(tasks) && tasks.length !== 0;\n  return (\n    <>\n      {isLoading && <p>Loading tasks...</p>}\n      {error && <p>{error}</p>}\n      <WrapList>\n        {showArr ? (\n          tasks.map(task => <MyTask task={task} key={nanoid()} />)\n        ) : (\n          <TaskListEmpty />\n        )}\n      </WrapList>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const TitleTab = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 2px;\n  width: 100%;\n\n  padding: 0;\n  margin: 0;\n`;\n// export const CellDate = styled.div`\n//   display: flex;\n//   flex-basis: 54px;\n//   height: 36px;\n//   justify-content: center;\n//   align-items: center;\n//   background-color: #9e9e9e;\n//   border-radius: 8px;\n//   border: 3px solid RGBA(117, 117, 117, 0.6);\n//   margin: 0;\n//   padding: 0;\n//   .date {\n//     width: 50px;\n//     height: 32px;\n//     border-radius: 4px;\n//     background-color: #f5f5f5;\n//     outline: none;\n//     border: none;\n//     padding: 0;\n//     margin: 0;\n//   }\n// `;\n// export const CellStatus = styled.div`\n//   display: flex;\n//   flex-basis: 36px;\n//   justify-content: center;\n//   align-items: center;\n//   height: 36px;\n//   background-color: #9e9e9e;\n//   border-radius: 8px;\n//   border: 3px solid RGBA(117, 117, 117, 0.6);\n//   margin: 0;\n//   .status {\n//     width: 32px;\n//     height: 32px;\n//     border-radius: 4px;\n//     background-color: #f5f5f5;\n//     outline: none;\n//     border: none;\n//     padding: 0;\n//     margin: 0;\n//   }\n// `;\nexport const CellStatus = styled.div`\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  background-color: #9e9e9e;\n  border-radius: 8px;\n  border: 3px solid RGBA(117, 117, 117, 0.6);\n  padding: 0 2px;\n  margin: 0;\n  .wrap {\n    display: flex;\n    flex-grow: 1;\n    justify-content: space-around;\n    align-items: center;\n    height: 32px;\n    border-radius: 4px;\n    background-color: #f5f5f5;\n    outline: none;\n    border: none;\n    padding: 0;\n  }\n  .btn-prior {\n    display: block;\n    font-size: 16px;\n    font-weight: 500;\n    color: #424242;\n    width: 28px;\n    height: 28px;\n    border-radius: 50%;\n    cursor: pointer;\n    padding: 0;\n    margin: 0;\n  }\n  .white {\n    background-color: #ffffff;\n    border: 1px solid #ffffff;\n  }\n  .blue {\n    background-color: #64b5f6;\n    border: 1px solid #64b5f6;\n  }\n  .red {\n    background-color: #ff5252;\n    border: 1px solid #ff5252;\n  }\n  .yellow {\n    background-color: #ffee58;\n    border: 1px solid #ffee58;\n  }\n  .green {\n    background-color: #00e676;\n    border: 1px solid #00e676;\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectStatusFilter } from 'redux/selectors';\n// import { setStatusFilter } from 'redux/filter/filtersSlice';\nimport { statusFilters } from 'redux/filter/constans';\n\nimport { CellStatus, TitleTab } from './Filter.styled';\n\nexport default function FilterTasks() {\n  // const dispatch = useDispatch();\n  // const tasks = useSelector(selectTasks);\n  const count = 0;\n  const filter = useSelector(selectStatusFilter);\n  // const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  return (\n    <TitleTab>\n      <CellStatus>\n        <div className=\"wrap\">\n          <button\n            className=\"btn-prior white\"\n            selected={filter === statusFilters.all}\n            // onClick={() => handleFilterChange(statusFilters.all)}\n          >\n            {0}\n          </button>\n          <button\n            className=\"btn-prior blue\"\n            selected={filter === statusFilters.blue}\n            // onClick={() => handleFilterChange(statusFilters.blue)}\n          >\n            {count.blue}\n          </button>\n          <button\n            className=\"btn-prior red\"\n            selected={filter === statusFilters.red}\n            // onClick={() => handleFilterChange(statusFilters.red)}\n          >\n            {count.red}\n          </button>\n          <button\n            className=\"btn-prior yellow\"\n            selected={filter === statusFilters.yellow}\n            // onClick={() => handleFilterChange(statusFilters.yellow)}\n          >\n            {count.yellow}\n          </button>\n          <button\n            className=\"btn-prior green\"\n            selected={filter === statusFilters.green}\n            // onClick={() => handleFilterChange(statusFilters.green)}\n          >\n            {count.green}\n          </button>\n        </div>\n      </CellStatus>\n    </TitleTab>\n  );\n}\n\n//  <BtnAll\n//           selected={filter === statusFilters.all}\n//           onClick={() => handleFilterChange(statusFilters.all)}\n//         >\n//           {tasks.length}\n//         </BtnAll>\n//         <BtnRed\n//           selected={filter === statusFilters.red}\n//           onClick={() => handleFilterChange(statusFilters.red)}\n//         >\n//           {count.red}\n//         </BtnRed>\n//         <BtnYellow\n//           selected={filter === statusFilters.yellow}\n//           onClick={() => handleFilterChange(statusFilters.yellow)}\n//         >\n//           {count.yellow}\n//         </BtnYellow>\n//         <BtnGreen\n//           selected={filter === statusFilters.green}\n//           onClick={() => handleFilterChange(statusFilters.green)}\n//         >\n//           {count.green}\n//         </BtnGreen>\n","// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { selectIsLoading } from 'redux/selectors';\n// import { fetchTasks } from 'redux/operations';\n// import TaskForm from 'components/TaskForm/TaskForm';\nimport { WrapTasksPage } from './Page.styled';\nimport TaskList from 'components/Task/TaskList';\nimport FilterTasks from 'components/Filter/FilterTasks';\nimport { WrapOutlet } from 'components/App.styled';\n\nexport default function TasksPage() {\n  // const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n\n  // useEffect(() => {\n  //   dispatch(fetchTasks());\n  // }, [dispatch]);\n\n  return (\n    <>\n      <WrapOutlet>\n        <WrapTasksPage>\n          {/* <div>{isLoading && 'Request in progress...'}</div> */}\n          {/* <TaskForm /> */}\n          <FilterTasks />\n          <TaskList />\n        </WrapTasksPage>\n      </WrapOutlet>\n    </>\n  );\n}\n"],"names":["WrapTasksPage","styled","WrapSignPage","TitleSignPage","WrapList","WrapTask","Wrapper","TaskBackGr","props","color","Text","BtnSetting","SettingTask","BtnStatus","BtnDelete","WrapEmpty","MyTask","task","dispatch","useDispatch","useState","isMoving","setIsMoving","id","_id","style","backgroundColor","title","transform","onClick","changeTaskColor","className","name","evt","taskId","currentTarget","console","log","deleteTask","TaskListEmpty","TaskList","isLoading","useSelector","selectIsLoading","error","selectErrorTasks","tasks","selectTasks","useEffect","fetchTasks","showArr","Array","isArray","length","map","nanoid","TitleTab","CellStatus","FilterTasks","filter","selectStatusFilter","selected","statusFilters","blue","red","yellow","green","TasksPage"],"sourceRoot":""}